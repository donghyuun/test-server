name: Java CICD
'on':
  workflow_dispatch: {
    }
  push:
    branches:
     - main
jobs:
  ci-pipeline:
    runs-on: ubuntu-latest
    steps:
     -
      name: Checkout repository
      uses: actions/checkout@v4
     -
      name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: adopt
        java-version: '21'
     -
      name: Grant execute permission for Gradle Wrapper
      run: chmod +x ./gradlew
     -
      name: Build with Gradle
      run: ./gradlew clean build -x test
     -
      name: Verify JAR file
      run: ls build/libs/*.jar
     -
      name: Docker Login
      uses: docker/login-action@v2.2.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
     -
      name: image build and push docker images
      uses: docker/build-push-action@v4.1.1
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/test-server:latest
        no-cache: true
     -
      name: Deploy to AWS EC2
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.AWS_HOST_IP }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
        port: ${{ secrets.REMOTE_SSH_PORT }}
        script: |-
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker pull ${{ secrets.DOCKER_USERNAME }}/test-server:latest
          docker stop test-server
          docker rm $(docker ps --filter 'status=exited' -a -q)
          docker run -d --name test-server --log-driver=syslog -p 8082:8080 ${{ secrets.DOCKER_USERNAME }}/test-server:latest
